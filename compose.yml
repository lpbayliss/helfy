services:
  postgres:
    image: timescale/timescaledb-ha:pg16
    container_name: helfy-postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: ${DB_USER:-helfy}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/01-init.sql
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-helfy} -d ${DB_NAME:-helfy_app}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    command: ["postgres", "-c", "shared_preload_libraries=timescaledb"]

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: helfy-app
    ports:
      - "${PORT:-3000}:${PORT:-3000}"
    environment:
      - APP_NAME=${APP_NAME:-helfy}
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=${PORT:-3000}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      # Database configuration
      - DB_HOST=${DB_HOST:-postgres}
      - DB_PORT=${DB_PORT:-5432}
      - DB_USER=${DB_USER:-helfy}
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - DB_NAME=${DB_NAME:-helfy_app}
      - DB_SSL=${DB_SSL:-false}
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:${PORT:-3000}/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local